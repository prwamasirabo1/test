SELECT id, first_name, last_name, email
FROM public.contacts;

INSERT INTO public.contacts
(first_name, last_name, email)
VALUES('patrick', 'John', 'patrickj@gmail.com');

INSERT INTO public.contacts
(first_name, last_name, email)
VALUES('James', 'Revi', 'jamesrj@gmail.com');

SELECT id, "name", balance FROM accounts;


INSERT INTO public.contacts
(first_name, last_name, email)
VALUES('Don', 'Philps', 'donphj@outlook.com');

INSERT INTO public.contacts
(first_name, last_name, email)
VALUES('Serge', 'Paul', 'sergepaulj@outlook.com');

SELECT "emp_user_Id", emp_fname, emp_lname, job_name, "dep-Id"
FROM "Employee_info";

INSERT INTO "Employee_info"
("emp_user_Id", emp_fname, emp_lname, job_name, "dep-Id")
VALUES('3', 'Emily', 'Nadia', 'accountant', 'B002');

SELECT emp_id, "password"
FROM employee_login;

INSERT INTO employee_login
(emp_id, "password")
VALUES(400, '12serwa');

INSERT INTO employee_login
(emp_id, "password")
VALUES(401, '13Rwama');

SELECT "emp_user_Id", emp_fname, emp_lname, job_name, "dep-Id"
FROM "Employee_info";

--> Bellow table was created 
CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL,
    PRIMARY KEY(id)
);

-- The following statements start a new transaction and insert a new account into the accounts table 
INSERT INTO accounts ("name", balance) VALUES('James Junior',200);
INSERT INTO accounts ("name", balance) VALUES('Angie Luka',300);
INSERT INTO accounts ("name", balance) VALUES('Denis Monique',400);

SELECT id, "name", balance FROM accounts;

-- I subtratracted 10USD FROM jAMES'S Account with id1 : 
UPDATE accounts SET balance= balance- 10 WHERE id=1;

--You can check the account balance by deploying the following query

SELECT id, "name", balance FROM accounts;

--- I can add amount to Angie's account 

UPDATE accounts SET balance= balance+ 500 WHERE id=2;

SELECT * FROM contacts;

Joined two tables and selected the colmucs I wanted 


--- crreate a view to join two tables and crreated view 

CREATE view employee_credentions as 
SELECT (first_name || '' || last_name ) as full_name, 
email, 
emp_id, 
password
from employee_login, contacts